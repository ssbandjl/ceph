{
  "cmd000":{
      "sig":[
          "pg",
          "stat"
      ],
      "help":"show placement group status.",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd001":{
      "sig":[
          "pg",
          "getmap"
      ],
      "help":"get binary pg map to -o/stdout",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd002":{
      "sig":[
          "pg",
          "dump",
          {
              "n":"N",
              "name":"dumpcontents",
              "req":"false",
              "strings":"all|summary|sum|delta|pools|osds|pgs|pgs_brief",
              "type":"CephChoices"
          }
      ],
      "help":"show human-readable versions of pg map (only 'all' valid with plain)",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd003":{
      "sig":[
          "pg",
          "dump_json",
          {
              "n":"N",
              "name":"dumpcontents",
              "req":"false",
              "strings":"all|summary|sum|pools|osds|pgs",
              "type":"CephChoices"
          }
      ],
      "help":"show human-readable version of pg map in json only",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd004":{
      "sig":[
          "pg",
          "dump_pools_json"
      ],
      "help":"show pg pools info in json only",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd005":{
      "sig":[
          "pg",
          "ls-by-pool",
          {
              "name":"poolstr",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"states",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"list pg with pool = [poolname]",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd006":{
      "sig":[
          "pg",
          "ls-by-primary",
          {
              "name":"osd",
              "type":"CephOsdName"
          },
          {
              "name":"pool",
              "req":"false",
              "type":"CephInt"
          },
          {
              "n":"N",
              "name":"states",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"list pg with primary = [osd]",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd007":{
      "sig":[
          "pg",
          "ls-by-osd",
          {
              "name":"osd",
              "type":"CephOsdName"
          },
          {
              "name":"pool",
              "req":"false",
              "type":"CephInt"
          },
          {
              "n":"N",
              "name":"states",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"list pg on osd [osd]",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd008":{
      "sig":[
          "pg",
          "ls",
          {
              "name":"pool",
              "req":"false",
              "type":"CephInt"
          },
          {
              "n":"N",
              "name":"states",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"list pg with specific pool, osd, state",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd009":{
      "sig":[
          "pg",
          "dump_stuck",
          {
              "n":"N",
              "name":"stuckops",
              "req":"false",
              "strings":"inactive|unclean|stale|undersized|degraded",
              "type":"CephChoices"
          },
          {
              "name":"threshold",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"show information about stuck pgs",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd010":{
      "sig":[
          "pg",
          "debug",
          {
              "name":"debugop",
              "strings":"unfound_objects_exist|degraded_pgs_exist",
              "type":"CephChoices"
          }
      ],
      "help":"show debug info about pgs",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd011":{
      "sig":[
          "pg",
          "scrub",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"start scrub on <pgid>",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd012":{
      "sig":[
          "pg",
          "deep-scrub",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"start deep-scrub on <pgid>",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd013":{
      "sig":[
          "pg",
          "repair",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"start repair on <pgid>",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd014":{
      "sig":[
          "pg",
          "force-recovery",
          {
              "n":"N",
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"force recovery of <pgid> first",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd015":{
      "sig":[
          "pg",
          "force-backfill",
          {
              "n":"N",
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"force backfill of <pgid> first",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd016":{
      "sig":[
          "pg",
          "cancel-force-recovery",
          {
              "n":"N",
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"restore normal recovery priority of <pgid>",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd017":{
      "sig":[
          "pg",
          "cancel-force-backfill",
          {
              "n":"N",
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"restore normal backfill priority of <pgid>",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd018":{
      "sig":[
          "osd",
          "perf"
      ],
      "help":"print dump of OSD perf summary stats",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd019":{
      "sig":[
          "osd",
          "df",
          {
              "name":"output_method",
              "req":"false",
              "strings":"plain|tree",
              "type":"CephChoices"
          }
      ],
      "help":"show OSD utilization",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd020":{
      "sig":[
          "osd",
          "blocked-by"
      ],
      "help":"print histogram of which OSDs are blocking their peers",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd021":{
      "sig":[
          "osd",
          "pool",
          "stats",
          {
              "name":"name",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"obtain stats from all pools, or from specified pool",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd022":{
      "sig":[
          "osd",
          "pool",
          "io-stats",
          {
              "name":"name",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"obtain io stats from all pools, or from specified pool",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd023":{
      "sig":[
          "osd",
          "root",
          "stats",
          {
              "name":"name",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"obtain stats from all roots, or from specified root",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd024":{
      "sig":[
          "osd",
          "pool",
          "cache-stats",
          {
              "name":"name",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"obtain stats from all pools, or from specified pool",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd025":{
      "sig":[
          "osd",
          "reweight-by-utilization",
          {
              "name":"oload",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"max_change",
              "req":"false",
              "type":"CephFloat"
          },
          {
              "name":"max_osds",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"no_increasing",
              "req":"false",
              "strings":"--no-increasing",
              "type":"CephChoices"
          }
      ],
      "help":"reweight OSDs by utilization [overload-percentage-for-consideration, default 120]",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd026":{
      "sig":[
          "osd",
          "test-reweight-by-utilization",
          {
              "name":"oload",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"max_change",
              "req":"false",
              "type":"CephFloat"
          },
          {
              "name":"max_osds",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"no_increasing",
              "req":"false",
              "strings":"--no-increasing",
              "type":"CephChoices"
          }
      ],
      "help":"dry run of reweight OSDs by utilization [overload-percentage-for-consideration, default 120]",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd027":{
      "sig":[
          "osd",
          "reweight-by-pg",
          {
              "name":"oload",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"max_change",
              "req":"false",
              "type":"CephFloat"
          },
          {
              "name":"max_osds",
              "req":"false",
              "type":"CephInt"
          },
          {
              "n":"N",
              "name":"pools",
              "req":"false",
              "type":"CephPoolname"
          }
      ],
      "help":"reweight OSDs by PG distribution [overload-percentage-for-consideration, default 120]",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd028":{
      "sig":[
          "osd",
          "test-reweight-by-pg",
          {
              "name":"oload",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"max_change",
              "req":"false",
              "type":"CephFloat"
          },
          {
              "name":"max_osds",
              "req":"false",
              "type":"CephInt"
          },
          {
              "n":"N",
              "name":"pools",
              "req":"false",
              "type":"CephPoolname"
          }
      ],
      "help":"dry run of reweight OSDs by PG distribution [overload-percentage-for-consideration, default 120]",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd029":{
      "sig":[
          "osd",
          "safe-to-destroy",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"check whether osd(s) can be safely destroyed without reducing data durability",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd030":{
      "sig":[
          "osd",
          "ok-to-stop",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"check whether osd(s) can be safely stopped without reducing immediate data availability",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd031":{
      "sig":[
          "osd",
          "scrub",
          {
              "name":"who",
              "type":"CephString"
          }
      ],
      "help":"initiate scrub on osd <who>, or use <all|any|*> to scrub all",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd032":{
      "sig":[
          "osd",
          "deep-scrub",
          {
              "name":"who",
              "type":"CephString"
          }
      ],
      "help":"initiate deep scrub on osd <who>, or use <all|any|*> to deep scrub all",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd033":{
      "sig":[
          "osd",
          "repair",
          {
              "name":"who",
              "type":"CephString"
          }
      ],
      "help":"initiate repair on osd <who>, or use <all|any|*> to repair all",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd034":{
      "sig":[
          "service",
          "dump"
      ],
      "help":"dump service map",
      "module":"service",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd035":{
      "sig":[
          "service",
          "status"
      ],
      "help":"dump service state",
      "module":"service",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd036":{
      "sig":[
          "config",
          "set",
          {
              "name":"key",
              "type":"CephString"
          },
          {
              "name":"value",
              "type":"CephString"
          }
      ],
      "help":"Set a configuration option at runtime (not persistent)",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd037":{
      "sig":[
          "bucket",
          "ls-by-engine",
          {
              "name":"engine",
              "type":"CephEngineid"
          },
          {
              "n":"N",
              "name":"states",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"list bucket on engine [engine]",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd038":{
      "sig":[
          "bucket",
          "ls",
          {
              "name":"pool",
              "req":"false",
              "type":"CephInt"
          },
          {
              "n":"N",
              "name":"states",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"list bucket with specific pool with status",
      "module":"bucket",
      "perm":"r",
      "avail":"cli,rest",
      "flags":8
  },
  "cmd039":{
      "sig":[
          "balancer",
          "status"
      ],
      "help":"Show balancer status",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd040":{
      "sig":[
          "balancer",
          "mode",
          {
              "name":"mode",
              "strings":"none|crush-compat|upmap",
              "type":"CephChoices"
          }
      ],
      "help":"Set balancer mode",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli",
      "flags":8
  },
  "cmd041":{
      "sig":[
          "balancer",
          "on"
      ],
      "help":"Enable automatic balancing",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli",
      "flags":8
  },
  "cmd042":{
      "sig":[
          "balancer",
          "off"
      ],
      "help":"Disable automatic balancing",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli",
      "flags":8
  },
  "cmd043":{
      "sig":[
          "balancer",
          "eval",
          {
              "name":"plan",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"Evaluate data distribution for the current cluster or specific plan",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd044":{
      "sig":[
          "balancer",
          "eval-verbose",
          {
              "name":"plan",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"Evaluate data distribution for the current cluster or specific plan (verbosely)",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd045":{
      "sig":[
          "balancer",
          "optimize",
          {
              "name":"plan",
              "type":"CephString"
          }
      ],
      "help":"Run optimizer to create a new plan",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli",
      "flags":8
  },
  "cmd046":{
      "sig":[
          "balancer",
          "show",
          {
              "name":"plan",
              "type":"CephString"
          }
      ],
      "help":"Show details of an optimization plan",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd047":{
      "sig":[
          "balancer",
          "rm",
          {
              "name":"plan",
              "type":"CephString"
          }
      ],
      "help":"Discard an optimization plan",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli",
      "flags":8
  },
  "cmd048":{
      "sig":[
          "balancer",
          "reset"
      ],
      "help":"Discard all optimization plans",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli",
      "flags":8
  },
  "cmd049":{
      "sig":[
          "balancer",
          "dump",
          {
              "name":"plan",
              "type":"CephString"
          }
      ],
      "help":"Show an optimization plan",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd050":{
      "sig":[
          "balancer",
          "execute",
          {
              "name":"plan",
              "type":"CephString"
          }
      ],
      "help":"Execute an optimization plan",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd051":{
      "sig":[
          "fs",
          "status",
          {
              "name":"fs",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"Show the status of a CephFS filesystem",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd052":{
      "sig":[
          "osd",
          "status",
          {
              "name":"bucket",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"Show the status of OSDs within a bucket, or all",
      "module":"mgr",
      "perm":"r",
      "avail":"cli",
      "flags":8
  },
  "cmd053":{
      "sig":[
          "pg",
          "force_create_pg",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"force creation of pg <pgid>",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd054":{
      "sig":[
          "pg",
          "set_full_ratio",
          {
              "name":"ratio",
              "range":"0.0|1.0",
              "type":"CephFloat"
          }
      ],
      "help":"set ratio at which pgs are considered full",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd055":{
      "sig":[
          "pg",
          "set_nearfull_ratio",
          {
              "name":"ratio",
              "range":"0.0|1.0",
              "type":"CephFloat"
          }
      ],
      "help":"set ratio at which pgs are considered nearly full",
      "module":"pg",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd056":{
      "sig":[
          "pg",
          "map",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"show mapping of pg to osds",
      "module":"pg",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd057":{
      "sig":[
          "osd",
          "last-stat-seq",
          {
              "name":"id",
              "type":"CephOsdName"
          }
      ],
      "help":"get the last pg stats sequence number reported for this osd",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd058":{
      "sig":[
          "auth",
          "export",
          {
              "name":"entity",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"write keyring for requested entity, or master keyring if none given",
      "module":"auth",
      "perm":"rx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd059":{
      "sig":[
          "auth",
          "get",
          {
              "name":"entity",
              "type":"CephString"
          }
      ],
      "help":"write keyring file with requested key",
      "module":"auth",
      "perm":"rx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd060":{
      "sig":[
          "auth",
          "get-key",
          {
              "name":"entity",
              "type":"CephString"
          }
      ],
      "help":"display requested key",
      "module":"auth",
      "perm":"rx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd061":{
      "sig":[
          "auth",
          "print-key",
          {
              "name":"entity",
              "type":"CephString"
          }
      ],
      "help":"display requested key",
      "module":"auth",
      "perm":"rx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd062":{
      "sig":[
          "auth",
          "print_key",
          {
              "name":"entity",
              "type":"CephString"
          }
      ],
      "help":"display requested key",
      "module":"auth",
      "perm":"rx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd063":{
      "sig":[
          "auth",
          "list"
      ],
      "help":"list authentication state",
      "module":"auth",
      "perm":"rx",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd064":{
      "sig":[
          "auth",
          "ls"
      ],
      "help":"list authentication state",
      "module":"auth",
      "perm":"rx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd065":{
      "sig":[
          "auth",
          "import"
      ],
      "help":"auth import: read keyring file from -i <file>",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd066":{
      "sig":[
          "auth",
          "add",
          {
              "name":"entity",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"caps",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"add auth info for <entity> from input file, or random key if no input is given, and/or any caps specified in the command",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd067":{
      "sig":[
          "auth",
          "get-or-create-key",
          {
              "name":"entity",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"caps",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"get, or add, key for <name> from system/caps pairs specified in the command.  If key already exists, any given caps must match the existing caps for that key.",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd068":{
      "sig":[
          "auth",
          "get-or-create",
          {
              "name":"entity",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"caps",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"add auth info for <entity> from input file, or random key if no input given, and/or any caps specified in the command",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd069":{
      "sig":[
          "fs",
          "authorize",
          {
              "name":"filesystem",
              "type":"CephString"
          },
          {
              "name":"entity",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"caps",
              "type":"CephString"
          }
      ],
      "help":"add auth for <entity> to access file system <filesystem> based on following directory and permissions pairs",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd070":{
      "sig":[
          "auth",
          "caps",
          {
              "name":"entity",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"caps",
              "type":"CephString"
          }
      ],
      "help":"update caps for <name> from caps specified in the command",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd071":{
      "sig":[
          "auth",
          "del",
          {
              "name":"entity",
              "type":"CephString"
          }
      ],
      "help":"delete all caps for <name>",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd072":{
      "sig":[
          "auth",
          "rm",
          {
              "name":"entity",
              "type":"CephString"
          }
      ],
      "help":"remove all caps for <name>",
      "module":"auth",
      "perm":"rwx",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd073":{
      "sig":[
          "compact"
      ],
      "help":"cause compaction of monitor's leveldb storage",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":5
  },
  "cmd074":{
      "sig":[
          "scrub"
      ],
      "help":"scrub the monitor stores",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd075":{
      "sig":[
          "fsid"
      ],
      "help":"show cluster FSID/UUID",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd076":{
      "sig":[
          "log",
          {
              "n":"N",
              "name":"logtext",
              "type":"CephString"
          }
      ],
      "help":"log supplied text to the monitor log",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd077":{
      "sig":[
          "log",
          "last",
          {
              "name":"num",
              "range":"1",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"level",
              "req":"false",
              "strings":"debug|info|sec|warn|error",
              "type":"CephChoices"
          },
          {
              "name":"channel",
              "req":"false",
              "strings":"*|cluster|audit",
              "type":"CephChoices"
          }
      ],
      "help":"print last few lines of the cluster log",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd078":{
      "sig":[
          "injectargs",
          {
              "n":"N",
              "name":"injected_args",
              "type":"CephString"
          }
      ],
      "help":"inject config arguments into monitor",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":1
  },
  "cmd079":{
      "sig":[
          "config",
          "set",
          {
              "name":"key",
              "type":"CephString"
          },
          {
              "name":"value",
              "type":"CephString"
          }
      ],
      "help":"Set a configuration option at runtime (not persistent)",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd080":{
      "sig":[
          "status"
      ],
      "help":"show cluster status",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd081":{
      "sig":[
          "status",
          "all",
          "flash"
      ],
      "help":"show cluster status all flash",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd082":{
      "sig":[
          "health",
          {
              "name":"detail",
              "req":"false",
              "strings":"detail",
              "type":"CephChoices"
          }
      ],
      "help":"show cluster health",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd083":{
      "sig":[
          "time-sync-status"
      ],
      "help":"show time sync status",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd084":{
      "sig":[
          "df",
          {
              "name":"detail",
              "req":"false",
              "strings":"detail",
              "type":"CephChoices"
          }
      ],
      "help":"show cluster free space stats",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd085":{
      "sig":[
          "report",
          {
              "n":"N",
              "name":"tags",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"report full status of cluster, optional title tag strings",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd086":{
      "sig":[
          "features"
      ],
      "help":"report of connected features",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd087":{
      "sig":[
          "quorum_status"
      ],
      "help":"report status of monitor quorum",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd088":{
      "sig":[
          "mon_status"
      ],
      "help":"report status of monitors",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":1
  },
  "cmd089":{
      "sig":[
          "sync",
          "force",
          {
              "name":"validate1",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          },
          {
              "name":"validate2",
              "req":"false",
              "strings":"--i-know-what-i-am-doing",
              "type":"CephChoices"
          }
      ],
      "help":"force sync of and clear monitor store",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":5
  },
  "cmd090":{
      "sig":[
          "heap",
          {
              "name":"heapcmd",
              "strings":"dump|start_profiler|stop_profiler|release|stats",
              "type":"CephChoices"
          }
      ],
      "help":"show heap usage info (available only if compiled with tcmalloc)",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":1
  },
  "cmd091":{
      "sig":[
          "quorum",
          {
              "n":"1",
              "name":"quorumcmd",
              "strings":"enter|exit",
              "type":"CephChoices"
          }
      ],
      "help":"enter or exit quorum",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd092":{
      "sig":[
          "tell",
          {
              "name":"target",
              "type":"CephName"
          },
          {
              "n":"N",
              "name":"args",
              "type":"CephString"
          }
      ],
      "help":"send a command to a specific daemon",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd093":{
      "sig":[
          "version"
      ],
      "help":"show mon daemon version",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":1
  },
  "cmd094":{
      "sig":[
          "node",
          "ls",
          {
              "name":"type",
              "req":"false",
              "strings":"all|osd|mon|mds",
              "type":"CephChoices"
          }
      ],
      "help":"list all nodes in cluster [type]",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd095":{
      "sig":[
          "node",
          "isolate",
          {
              "name":"type",
              "type":"CephString"
          }
      ],
      "help":"isolate <type>",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd096":{
      "sig":[
          "mon",
          "compact"
      ],
      "help":"cause compaction of monitor's leveldb storage",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":1
  },
  "cmd097":{
      "sig":[
          "mon",
          "scrub"
      ],
      "help":"scrub the monitor stores",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd098":{
      "sig":[
          "mon",
          "sync",
          "force",
          {
              "name":"validate1",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          },
          {
              "name":"validate2",
              "req":"false",
              "strings":"--i-know-what-i-am-doing",
              "type":"CephChoices"
          }
      ],
      "help":"force sync of and clear monitor store",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":1
  },
  "cmd099":{
      "sig":[
          "mon",
          "metadata",
          {
              "name":"id",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"fetch metadata for mon <id>",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd100":{
      "sig":[
          "mon",
          "count-metadata",
          {
              "name":"property",
              "type":"CephString"
          }
      ],
      "help":"count mons by metadata field property",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd101":{
      "sig":[
          "mon",
          "versions"
      ],
      "help":"check running versions of monitors",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd102":{
      "sig":[
          "versions"
      ],
      "help":"check running versions of ceph daemons",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd103":{
      "sig":[
          "mds",
          "stat"
      ],
      "help":"show MDS status",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd104":{
      "sig":[
          "mds",
          "dump",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"dump legacy MDS cluster info, optionally from epoch",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd105":{
      "sig":[
          "fs",
          "dump",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"dump all CephFS status, optionally from epoch",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd106":{
      "sig":[
          "mds",
          "getmap",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"get MDS map, optionally from epoch",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd107":{
      "sig":[
          "mds",
          "metadata",
          {
              "name":"who",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"fetch metadata for mds <who>",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd108":{
      "sig":[
          "mds",
          "count-metadata",
          {
              "name":"property",
              "type":"CephString"
          }
      ],
      "help":"count MDSs by metadata field property",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd109":{
      "sig":[
          "mds",
          "versions"
      ],
      "help":"check running versions of MDSs",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd110":{
      "sig":[
          "mds",
          "tell",
          {
              "name":"who",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"args",
              "type":"CephString"
          }
      ],
      "help":"send command to particular mds",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":2
  },
  "cmd111":{
      "sig":[
          "mds",
          "compat",
          "show"
      ],
      "help":"show mds compatibility settings",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd112":{
      "sig":[
          "mds",
          "stop",
          {
              "name":"who",
              "type":"CephString"
          }
      ],
      "help":"stop mds",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd113":{
      "sig":[
          "mds",
          "deactivate",
          {
              "name":"who",
              "type":"CephString"
          }
      ],
      "help":"clean up specified MDS rank (use with `set max_mds` to shrink cluster)",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd114":{
      "sig":[
          "mds",
          "set_max_mds",
          {
              "name":"maxmds",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"set max MDS index",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd115":{
      "sig":[
          "mds",
          "set",
          {
              "name":"var",
              "strings":"max_mds|max_file_size|allow_new_snaps|inline_data|allow_multimds|allow_dirfrags|set_tier_nodepool|set_nodepool_datapool|set_nodepool_metadatapool|set_pre_invalid_pool|del_tier_nodepool|del_nodepool_datapool|del_nodepool_metadatapool|del_pre_invalid_pool|set_tier_switch|pool|upgrade_nodepool|set_write_tier_switch",
              "type":"CephChoices"
          },
          {
              "name":"val",
              "type":"CephString"
          },
          {
              "name":"confirm",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"set mds parameter <var> to <val>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd116":{
      "sig":[
          "mds",
          "set_state",
          {
              "name":"gid",
              "range":"0",
              "type":"CephInt"
          },
          {
              "name":"state",
              "range":"0|20",
              "type":"CephInt"
          }
      ],
      "help":"set mds state of <gid> to <numeric-state>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd117":{
      "sig":[
          "mds",
          "fail",
          {
              "name":"who",
              "type":"CephString"
          }
      ],
      "help":"Mark MDS failed: trigger a failover if a standby is available",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd118":{
      "sig":[
          "mds",
          "repaired",
          {
              "name":"rank",
              "type":"CephString"
          }
      ],
      "help":"mark a damaged MDS rank as no longer damaged",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd119":{
      "sig":[
          "mds",
          "rm",
          {
              "name":"gid",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"remove nonactive mds",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd120":{
      "sig":[
          "mds",
          "rmfailed",
          {
              "name":"who",
              "type":"CephString"
          },
          {
              "name":"confirm",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"remove failed mds",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd121":{
      "sig":[
          "mds",
          "cluster_down"
      ],
      "help":"take MDS cluster down",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd122":{
      "sig":[
          "mds",
          "cluster_up"
      ],
      "help":"bring MDS cluster up",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd123":{
      "sig":[
          "mds",
          "compat",
          "rm_compat",
          {
              "name":"feature",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"remove compatible feature",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd124":{
      "sig":[
          "mds",
          "compat",
          "rm_incompat",
          {
              "name":"feature",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"remove incompatible feature",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd125":{
      "sig":[
          "mds",
          "add_data_pool",
          {
              "name":"pool",
              "type":"CephString"
          }
      ],
      "help":"add data pool <pool>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd126":{
      "sig":[
          "mds",
          "remove_data_pool",
          {
              "name":"pool",
              "type":"CephString"
          }
      ],
      "help":"remove data pool <pool>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd127":{
      "sig":[
          "mds",
          "rm_data_pool",
          {
              "name":"pool",
              "type":"CephString"
          }
      ],
      "help":"remove data pool <pool>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd128":{
      "sig":[
          "mds",
          "newfs",
          {
              "name":"metadata",
              "range":"0",
              "type":"CephInt"
          },
          {
              "name":"data",
              "range":"0",
              "type":"CephInt"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"make new filesystem using pools <metadata> and <data>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":2
  },
  "cmd129":{
      "sig":[
          "mds",
          "caps",
          {
              "name":"caps_int",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"switch int into caps",
      "module":"mds",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd130":{
      "sig":[
          "fs",
          "new",
          {
              "name":"fs_name",
              "type":"CephString"
          },
          {
              "name":"metadata",
              "type":"CephString"
          },
          {
              "name":"data",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--force",
              "type":"CephChoices"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--allow-dangerous-metadata-overlay",
              "type":"CephChoices"
          },
          {
              "name":"fsid_meta",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"fsid_data",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"data_type",
              "req":"false",
              "strings":"pool_id|pool_name",
              "type":"CephChoices"
          }
      ],
      "help":"make new filesystem using named pools <metadata> and <data>, ",
      "module":"fs",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd131":{
      "sig":[
          "fs",
          "rm",
          {
              "name":"fs_name",
              "type":"CephString"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"disable the named filesystem",
      "module":"fs",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd132":{
      "sig":[
          "fs",
          "reset",
          {
              "name":"fs_name",
              "type":"CephString"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"disaster recovery only: reset to a single-MDS map",
      "module":"fs",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd133":{
      "sig":[
          "fs",
          "ls"
      ],
      "help":"list filesystems",
      "module":"fs",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd134":{
      "sig":[
          "fs",
          "get",
          {
              "name":"fs_name",
              "type":"CephString"
          }
      ],
      "help":"get info about one filesystem",
      "module":"fs",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd135":{
      "sig":[
          "fs",
          "set",
          {
              "name":"fs_name",
              "type":"CephString"
          },
          {
              "name":"var",
              "strings":"max_mds|max_file_size|allow_new_snaps|inline_data|cluster_down|allow_multimds|allow_dirfrags|balancer|standby_count_wanted",
              "type":"CephChoices"
          },
          {
              "name":"val",
              "type":"CephString"
          },
          {
              "name":"confirm",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"set mds parameter <var> to <val>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd136":{
      "sig":[
          "fs",
          "flag",
          "set",
          {
              "name":"flag_name",
              "strings":"enable_multiple",
              "type":"CephChoices"
          },
          {
              "name":"val",
              "type":"CephString"
          },
          {
              "name":"confirm",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"Set a global CephFS flag",
      "module":"fs",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd137":{
      "sig":[
          "fs",
          "add_data_pool",
          {
              "name":"fs_name",
              "type":"CephString"
          },
          {
              "name":"pool",
              "type":"CephString"
          },
          {
              "name":"nodepool",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"pool_id",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"master_fs",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"add data pool <pool>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd138":{
      "sig":[
          "fs",
          "rm_data_pool",
          {
              "name":"fs_name",
              "type":"CephString"
          },
          {
              "name":"pool",
              "type":"CephString"
          }
      ],
      "help":"remove data pool <pool>",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd139":{
      "sig":[
          "fs",
          "set_default",
          {
              "name":"fs_name",
              "type":"CephString"
          }
      ],
      "help":"set the default to the named filesystem",
      "module":"fs",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd140":{
      "sig":[
          "fs",
          "set-default",
          {
              "name":"fs_name",
              "type":"CephString"
          }
      ],
      "help":"set the default to the named filesystem",
      "module":"fs",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd141":{
      "sig":[
          "mds",
          "update"
      ],
      "help":"update MDS info",
      "module":"mds",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd142":{
      "sig":[
          "mon",
          "dump",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"dump formatted monmap (optionally from epoch)",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd143":{
      "sig":[
          "mon",
          "stat"
      ],
      "help":"summarize monitor status",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd144":{
      "sig":[
          "mon",
          "getmap",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"get monmap",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd145":{
      "sig":[
          "mon",
          "add",
          {
              "name":"name",
              "type":"CephString"
          },
          {
              "name":"addr",
              "type":"CephIPAddr"
          }
      ],
      "help":"add new monitor named <name> at <addr>",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd146":{
      "sig":[
          "mon",
          "remove",
          {
              "name":"name",
              "type":"CephString"
          }
      ],
      "help":"remove monitor named <name>",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd147":{
      "sig":[
          "mon",
          "rm",
          {
              "name":"name",
              "type":"CephString"
          }
      ],
      "help":"remove monitor named <name>",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd148":{
      "sig":[
          "mon",
          "feature",
          "ls",
          {
              "name":"with_value",
              "req":"false",
              "strings":"--with-value",
              "type":"CephChoices"
          }
      ],
      "help":"list available mon map features to be set/unset",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd149":{
      "sig":[
          "mon",
          "feature",
          "set",
          {
              "name":"feature_name",
              "type":"CephString"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"set provided feature on mon map",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd150":{
      "sig":[
          "mon",
          "show_cluster_version"
      ],
      "help":"show over-all version of ceph cluster",
      "module":"mon",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd151":{
      "sig":[
          "mon",
          "set_cluster_version",
          {
              "name":"cluster_version",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"set cluster_version to <cluster_version>",
      "module":"mon",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd152":{
      "sig":[
          "osd",
          "stat"
      ],
      "help":"print summary of OSD map",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd153":{
      "sig":[
          "osd",
          "show-pool-rwstatus"
      ],
      "help":"print rwstatus of pools",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd154":{
      "sig":[
          "osd",
          "dump",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"print summary of OSD map",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd155":{
      "sig":[
          "osd",
          "tree",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          },
          {
              "n":"N",
              "name":"states",
              "req":"false",
              "strings":"up|down|in|out|destroyed",
              "type":"CephChoices"
          }
      ],
      "help":"print OSD tree",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd156":{
      "sig":[
          "osd",
          "ls",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"show all OSD ids",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd157":{
      "sig":[
          "osd",
          "getmap",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"get OSD map",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd158":{
      "sig":[
          "osd",
          "getcrushmap",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"get CRUSH map",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd159":{
      "sig":[
          "osd",
          "getmaxosd"
      ],
      "help":"show largest OSD id",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd160":{
      "sig":[
          "osd",
          "get_max_pool"
      ],
      "help":"get max pool_id has used",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd161":{
      "sig":[
          "osd",
          "ls-tree",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"name",
              "req":"true",
              "type":"CephString"
          }
      ],
      "help":"show OSD ids under bucket <name> in the CRUSH map",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd162":{
      "sig":[
          "osd",
          "find",
          {
              "name":"id",
              "type":"CephOsdName"
          }
      ],
      "help":"find osd <id> in the CRUSH map and show its location",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd163":{
      "sig":[
          "osd",
          "show-osd-noup",
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"osd",
              "type":"CephString"
          }
      ],
      "help":"show osd <osd> noout set or not",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd164":{
      "sig":[
          "osd",
          "metadata",
          {
              "name":"id",
              "req":"false",
              "type":"CephOsdName"
          }
      ],
      "help":"fetch metadata for osd {id} (default all)",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd165":{
      "sig":[
          "osd",
          "count-metadata",
          {
              "name":"property",
              "type":"CephString"
          }
      ],
      "help":"count OSDs by metadata field property",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd166":{
      "sig":[
          "osd",
          "versions"
      ],
      "help":"check running versions of OSDs",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd167":{
      "sig":[
          "osd",
          "map",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"object",
              "type":"CephObjectname"
          },
          {
              "name":"nspace",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"find pg for <object> in <pool> with [namespace]",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd168":{
      "sig":[
          "osd",
          "lspools",
          {
              "name":"auid",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"list pools",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd169":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "list"
      ],
      "help":"list crush rules",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd170":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "ls"
      ],
      "help":"list crush rules",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd171":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "ls-by-class",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"class",
              "type":"CephString"
          }
      ],
      "help":"list all crush rules that reference the same <class>",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd172":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "dump",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"dump crush rule <name> (default all)",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd173":{
      "sig":[
          "osd",
          "crush",
          "dump"
      ],
      "help":"dump crush map",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd174":{
      "sig":[
          "osd",
          "setcrushmap",
          {
              "name":"prior_version",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"set crush map from input file",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd175":{
      "sig":[
          "osd",
          "crush",
          "set",
          {
              "name":"prior_version",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"set crush map from input file",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd176":{
      "sig":[
          "osd",
          "crush",
          "add-bucket",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "name":"type",
              "type":"CephString"
          }
      ],
      "help":"add no-parent (probably root) crush bucket <name> of type <type>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd177":{
      "sig":[
          "osd",
          "crush",
          "rename-bucket",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"srcname",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"dstname",
              "type":"CephString"
          }
      ],
      "help":"rename bucket <srcname> to <dstname>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd178":{
      "sig":[
          "osd",
          "crush",
          "set",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"weight",
              "range":"0.0",
              "type":"CephFloat"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"args",
              "type":"CephString"
          }
      ],
      "help":"update crushmap position and weight for <name> to <weight> with location <args>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd179":{
      "sig":[
          "osd",
          "crush",
          "add",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"weight",
              "range":"0.0",
              "type":"CephFloat"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"args",
              "type":"CephString"
          }
      ],
      "help":"add or update crushmap position and weight for <name> with <weight> and location <args>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd180":{
      "sig":[
          "osd",
          "crush",
          "set-all-straw-buckets-to-straw2"
      ],
      "help":"convert all CRUSH current straw buckets to use the straw2 algorithm",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd181":{
      "sig":[
          "osd",
          "crush",
          "set-device-class",
          {
              "name":"class",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"set the <class> of the osd(s) <id> [<id>...],or use <all|any|*> to set all.",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd182":{
      "sig":[
          "osd",
          "crush",
          "rm-device-class",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"remove class of the osd(s) <id> [<id>...],or use <all|any|*> to remove all.",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd183":{
      "sig":[
          "osd",
          "crush",
          "class",
          "rename",
          {
              "goodchars":"[A-Za-z0-9-_]",
              "name":"srcname",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_]",
              "name":"dstname",
              "type":"CephString"
          }
      ],
      "help":"rename crush device class <srcname> to <dstname>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd184":{
      "sig":[
          "osd",
          "crush",
          "create-or-move",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"weight",
              "range":"0.0",
              "type":"CephFloat"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"args",
              "type":"CephString"
          }
      ],
      "help":"create entry or move existing entry for <name> <weight> at/to location <args>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd185":{
      "sig":[
          "osd",
          "crush",
          "move",
          {
              "name":"names",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"args",
              "type":"CephString"
          }
      ],
      "help":"ove existing entries for <names> (osd1,hostname1,...) to location <args>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd186":{
      "sig":[
          "osd",
          "crush",
          "swap-bucket",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"source",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"dest",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"swap existing bucket contents from (orphan) bucket <source> and <target>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd187":{
      "sig":[
          "osd",
          "crush",
          "link",
          {
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"args",
              "type":"CephString"
          }
      ],
      "help":"link existing entry for <name> under location <args>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd188":{
      "sig":[
          "osd",
          "crush",
          "rm",
          {
              "name":"names",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"ancestor",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"remove <names> (osd1,hostname1,...) from crush map (everywhere, or just at <ancestor>)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd189":{
      "sig":[
          "osd",
          "crush",
          "remove",
          {
              "name":"names",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"ancestor",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"remove <names> (osd1,hostname1,...) from crush map (everywhere, or just at <ancestor>)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd190":{
      "sig":[
          "osd",
          "crush",
          "unlink",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"ancestor",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"unlink <name> from crush map (everywhere, or just at <ancestor>)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd191":{
      "sig":[
          "osd",
          "crush",
          "reweight-all"
      ],
      "help":"recalculate the weights for the tree to ensure they sum correctly",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd192":{
      "sig":[
          "osd",
          "crush",
          "reweight",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "name":"weight",
              "range":"0.0",
              "type":"CephFloat"
          }
      ],
      "help":"change <name>'s weight to <weight> in crush map",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd193":{
      "sig":[
          "osd",
          "crush",
          "reweight-subtree",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "name":"weight",
              "range":"0.0",
              "type":"CephFloat"
          }
      ],
      "help":"change all leaf items beneath <name> to <weight> in crush map",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd194":{
      "sig":[
          "osd",
          "crush",
          "tunables",
          {
              "name":"profile",
              "strings":"legacy|argonaut|bobtail|firefly|hammer|jewel|optimal|default",
              "type":"CephChoices"
          }
      ],
      "help":"set crush tunables values to <profile>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd195":{
      "sig":[
          "osd",
          "crush",
          "set-tunable",
          {
              "name":"tunable",
              "strings":"straw_calc_version",
              "type":"CephChoices"
          },
          {
              "name":"value",
              "type":"CephInt"
          }
      ],
      "help":"set crush tunable <tunable> to <value>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd196":{
      "sig":[
          "osd",
          "crush",
          "get-tunable",
          {
              "name":"tunable",
              "strings":"straw_calc_version",
              "type":"CephChoices"
          }
      ],
      "help":"get crush tunable <tunable>",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd197":{
      "sig":[
          "osd",
          "crush",
          "show-tunables"
      ],
      "help":"show current crush tunables",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd198":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "create-simple",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"root",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"type",
              "type":"CephString"
          },
          {
              "name":"mode",
              "req":"false",
              "strings":"firstn|indep",
              "type":"CephChoices"
          }
      ],
      "help":"create crush rule <name> to start from <root>, replicate across buckets of type <type>, using a choose mode of <firstn|indep> (default firstn; indep best for erasure pools)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd199":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "create-replicated",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"root",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"type",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"class",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"create crush rule <name> for replicated pool to start from <root>, replicate across buckets of type <type>, using a choose mode of <firstn|indep> (default firstn; indep best for erasure pools)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd200":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "create-erasure",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "name":"profile",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"create crush rule <name> for erasure coded pool created with <profile> (default default)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd201":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "create",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"root",
              "type":"CephString"
          },
          {
              "name":"rule_type",
              "req":"false",
              "strings":"replicated|erasure",
              "type":"CephChoices"
          },
          {
              "name":"failure_domain",
              "req":"false",
              "strings":"host|rack",
              "type":"CephChoices"
          },
          {
              "name":"ec_num",
              "req":"false",
              "strings":"1|2|3|4",
              "type":"CephChoices"
          },
          {
              "name":"protection_domain",
              "req":"false",
              "strings":"--i-need-protection-domain",
              "type":"CephChoices"
          }
      ],
      "help":"create crush rule <name> with <root>, using a choose rule type of <replicated|erasure>, a choose failure domain of <host|rack>, a choose ec num of <1|2|3|4> and use <--i-need-protection-domain> for protection domain",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd202":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "create-dlive",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"root",
              "type":"CephString"
          },
          {
              "name":"failure_domain",
              "req":"false",
              "strings":"host|rack",
              "type":"CephChoices"
          },
          {
              "name":"rep_num",
              "range":"2",
              "type":"CephInt"
          },
          {
              "name":"protection_domain",
              "req":"false",
              "strings":"--i-need-protection-domain",
              "type":"CephChoices"
          }
      ],
      "help":"create crush rule <name> with <root>, using a rule type of replicated, a choose failure domain of <host|rack>, a choose rep num of <rep_num> and use <--i-need-protection-domain> for protection domain",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd203":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "rm",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          }
      ],
      "help":"remove crush rule <name>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd204":{
      "sig":[
          "osd",
          "crush",
          "rule",
          "rename",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"srcname",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"dstname",
              "type":"CephString"
          }
      ],
      "help":"rename crush rule <srcname> to <dstname>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd205":{
      "sig":[
          "osd",
          "bad_disk_alarm",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"hostname",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.:]",
              "name":"hostip",
              "type":"CephString"
          },
          {
              "name":"disk_symbol",
              "type":"CephString"
          },
          {
              "name":"disk_slot",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"bMediumErrTriggered",
              "type":"CephString"
          }
      ],
      "help":"bad_disk_detect.py detect this osd is bad",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd206":{
      "sig":[
          "osd",
          "crush",
          "tree",
          {
              "name":"shadow",
              "req":"false",
              "strings":"--show-shadow",
              "type":"CephChoices"
          }
      ],
      "help":"dump crush buckets and items in a tree view",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd207":{
      "sig":[
          "osd",
          "crush",
          "ls",
          {
              "goodchars":"goodchars=[A-Za-z0-9-_.]",
              "name":"node",
              "type":"CephString"
          }
      ],
      "help":"list items beneath a node in the CRUSH tree",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd208":{
      "sig":[
          "osd",
          "crush",
          "class",
          "ls"
      ],
      "help":"list all crush device classes",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd209":{
      "sig":[
          "osd",
          "crush",
          "class",
          "ls-osd",
          {
              "goodchars":"[A-Za-z0-9-_]",
              "name":"class",
              "type":"CephString"
          }
      ],
      "help":"list all osds belonging to the specific <class>",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd210":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "ls"
      ],
      "help":"list crush weight sets",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd211":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "dump"
      ],
      "help":"dump crush weight sets",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd212":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "create-compat"
      ],
      "help":"create a default backward-compatible weight-set",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd213":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "create",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"mode",
              "strings":"flat|positional",
              "type":"CephChoices"
          }
      ],
      "help":"create a weight-set for a given pool",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd214":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "rm",
          {
              "name":"pool",
              "type":"CephPoolname"
          }
      ],
      "help":"remove the weight-set for a given pool",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd215":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "rm-compat"
      ],
      "help":"remove the backward-compatible weight-set",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd216":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "reweight",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"item",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"weight",
              "range":"0.0",
              "type":"CephFloat"
          }
      ],
      "help":"set weight for an item (bucket or osd) in a pool's weight-set",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd217":{
      "sig":[
          "osd",
          "set-prior-site",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"diskpool_name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"prior_site_name",
              "type":"CephString"
          }
      ],
      "help":"set <prior_site_name> for <diskpool_name>, will choose item from prior-site at first",
      "module":"osd",
      "perm":"rw",
      "avail":"cli rest",
      "flags":0
  },
  "cmd218":{
      "sig":[
          "osd",
          "rm-prior-site",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"diskpool_name",
              "type":"CephString"
          }
      ],
      "help":"rm prior-site for <diskpool_name>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli rest",
      "flags":0
  },
  "cmd219":{
      "sig":[
          "osd",
          "rename-datacenter",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"srcname",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"dstname",
              "type":"CephString"
          }
      ],
      "help":"rename <diskpoolname> datacenter from <srcname> to <dstname>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd220":{
      "sig":[
          "osd",
          "crush",
          "weight-set",
          "reweight-compat",
          {
              "name":"item",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"weight",
              "range":"0.0",
              "type":"CephFloat"
          }
      ],
      "help":"set weight for an item (bucket or osd) in the backward-compatible weight-set",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd221":{
      "sig":[
          "osd",
          "setmaxosd",
          {
              "name":"newmax",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"set new maximum osd value",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd222":{
      "sig":[
          "osd",
          "set-full-ratio",
          {
              "name":"ratio",
              "range":"0.0|1.0",
              "type":"CephFloat"
          }
      ],
      "help":"set usage ratio at which OSDs are marked full",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd223":{
      "sig":[
          "osd",
          "set-backfillfull-ratio",
          {
              "name":"ratio",
              "range":"0.0|1.0",
              "type":"CephFloat"
          }
      ],
      "help":"set usage ratio at which OSDs are marked too full to backfill",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd224":{
      "sig":[
          "osd",
          "set-nearfull-ratio",
          {
              "name":"ratio",
              "range":"0.0|1.0",
              "type":"CephFloat"
          }
      ],
      "help":"set usage ratio at which OSDs are marked near-full",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd225":{
      "sig":[
          "osd",
          "set-require-min-compat-client",
          {
              "name":"version",
              "type":"CephString"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"set the minimum client version we will maintain compatibility with",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd226":{
      "sig":[
          "osd",
          "pause"
      ],
      "help":"pause osd",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd227":{
      "sig":[
          "osd",
          "unpause"
      ],
      "help":"unpause osd",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd228":{
      "sig":[
          "osd",
          "erasure-code-profile",
          "set",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"profile",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"create erasure code profile <name> with [<key[=value]> ...] pairs. Add a --force at the end to override an existing profile (VERY DANGEROUS)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd229":{
      "sig":[
          "osd",
          "erasure-code-profile",
          "get",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          }
      ],
      "help":"get erasure code profile <name>",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd230":{
      "sig":[
          "osd",
          "erasure-code-profile",
          "rm",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          }
      ],
      "help":"remove erasure code profile <name>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd231":{
      "sig":[
          "osd",
          "erasure-code-profile",
          "ls"
      ],
      "help":"list all erasure code profiles",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd232":{
      "sig":[
          "osd",
          "set",
          {
              "name":"key",
              "strings":"full|pause|noup|nodown|noout|noin|nobackfill|norebalance|norecover|noscrub|nodeep-scrub|notieragent|sortbitwise|recovery_deletes|require_jewel_osds|require_kraken_osds",
              "type":"CephChoices"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"set <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd233":{
      "sig":[
          "osd",
          "unset",
          {
              "name":"key",
              "strings":"full|pause|noup|nodown|noout|noin|nobackfill|norebalance|norecover|noscrub|nodeep-scrub|notieragent",
              "type":"CephChoices"
          }
      ],
      "help":"unset <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd234":{
      "sig":[
          "osd",
          "set-root",
          {
              "name":"key",
              "strings":"noup|nodown|noout|noin|nobackfill|norebalance|norecover",
              "type":"CephChoices"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"set root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd235":{
      "sig":[
          "osd",
          "recovery_policy",
          "set-root",
          {
              "name":"key",
              "strings":"extremelyhighspeed|highspeed|middlespeed|lowspeed|extremelylowspeed",
              "type":"CephChoices"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"set root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd236":{
      "sig":[
          "osd",
          "rm-root",
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"set root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd237":{
      "sig":[
          "osd",
          "ls-root",
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"list roots",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd238":{
      "sig":[
          "osd",
          "ls-roots"
      ],
      "help":"list roots",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd239":{
      "sig":[
          "osd",
          "recovery_value",
          "set-root",
          {
              "goodchars":"0-9-",
              "name":"key",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"set root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd240":{
      "sig":[
          "osd",
          "snapTrim_value",
          "set-root",
          {
              "goodchars":"0-9-",
              "name":"key",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"set root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd241":{
      "sig":[
          "osd",
          "scrub_value",
          "set-root",
          {
              "goodchars":"0-9-",
              "name":"key",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"set root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd242":{
      "sig":[
          "osd",
          "overload_switch",
          "set-root",
          {
              "name":"key",
              "strings":"1|0",
              "type":"CephChoices"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"set root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd243":{
      "sig":[
          "osd",
          "unset-root",
          {
              "name":"key",
              "strings":"noup|nodown|noout|noin|nobackfill|norebalance|norecover",
              "type":"CephChoices"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"unset root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd244":{
      "sig":[
          "osd",
          "recovery_policy",
          "unset-root",
          {
              "name":"key",
              "strings":"extremelyhighspeed|highspeed|middlespeed|lowspeed|extremelylowspeed",
              "type":"CephChoices"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"root",
              "type":"CephString"
          }
      ],
      "help":"unset root <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd245":{
      "sig":[
          "osd",
          "show-osd-noout",
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"osd",
              "type":"CephString"
          }
      ],
      "help":"show osd <osd> noout set or not",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd246":{
      "sig":[
          "osd",
          "set-osd",
          {
              "name":"key",
              "strings":"noup|noout",
              "type":"CephChoices"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"osd",
              "type":"CephString"
          }
      ],
      "help":"set osd <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd247":{
      "sig":[
          "osd",
          "unset-osd",
          {
              "name":"key",
              "strings":"noup|noout",
              "type":"CephChoices"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"osd",
              "type":"CephString"
          }
      ],
      "help":"unset osd <key>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd248":{
      "sig":[
          "osd",
          "require-osd-release",
          {
              "name":"release",
              "strings":"luminous",
              "type":"CephChoices"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"set the minimum allowed OSD release to participate in the cluster",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd249":{
      "sig":[
          "osd",
          "cluster_snap"
      ],
      "help":"take cluster snapshot (disabled)",
      "module":"osd",
      "perm":"r",
      "avail":"",
      "flags":0
  },
  "cmd250":{
      "sig":[
          "osd",
          "down",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"set osd(s) <id> [<id>...] down, or use <any|all|*> to set all osds down",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd251":{
      "sig":[
          "osd",
          "out",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"set osd(s) <id> [<id>...] out, or use <any|all|*> to set all osds out",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd252":{
      "sig":[
          "osd",
          "in",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"set osd(s) <id> [<id>...] in, can use <any|all|*> to automatically set all previously out osds in",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd253":{
      "sig":[
          "osd",
          "rm",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"remove osd(s) <id> [<id>...], or use <any|all|*> to remove all osds",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd254":{
      "sig":[
          "osd",
          "add-noup",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"mark osd(s) <id> [<id>...] as noup, or use <all|any|*> to mark all osds as noup",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd255":{
      "sig":[
          "osd",
          "add-nodown",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"mark osd(s) <id> [<id>...] as nodown, or use <all|any|*> to mark all osds as nodown",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd256":{
      "sig":[
          "osd",
          "add-noin",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"mark osd(s) <id> [<id>...] as noin, or use <all|any|*> to mark all osds as noin",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd257":{
      "sig":[
          "osd",
          "add-noout",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"mark osd(s) <id> [<id>...] as noout, or use <all|any|*> to mark all osds as noout",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd258":{
      "sig":[
          "osd",
          "rm-noup",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"allow osd(s) <id> [<id>...] to be marked up (if they are currently marked as noup), can use <all|any|*> to automatically filter out all noup osds",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd259":{
      "sig":[
          "osd",
          "rm-nodown",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"allow osd(s) <id> [<id>...] to be marked down (if they are currently marked as nodown), can use <all|any|*> to automatically filter out all nodown osds",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd260":{
      "sig":[
          "osd",
          "rm-noin",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"allow osd(s) <id> [<id>...] to be marked in (if they are currently marked as noin), can use <all|any|*> to automatically filter out all noin osds",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd261":{
      "sig":[
          "osd",
          "rm-noout",
          {
              "n":"N",
              "name":"ids",
              "type":"CephString"
          }
      ],
      "help":"allow osd(s) <id> [<id>...] to be marked out (if they are currently marked as noout), can use <all|any|*> to automatically filter out all noout osds",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd262":{
      "sig":[
          "osd",
          "reweight",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"weight",
              "range":"0.0|1.0",
              "type":"CephFloat"
          }
      ],
      "help":"reweight osd to 0.0 < <weight> < 1.0",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd263":{
      "sig":[
          "osd",
          "reweightn",
          {
              "name":"weights",
              "type":"CephString"
          }
      ],
      "help":"reweight osds with {<id>: <weight>,...})",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd264":{
      "sig":[
          "osd",
          "force-create-pg",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"force creation of pg <pgid>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd265":{
      "sig":[
          "osd",
          "pg-temp",
          {
              "name":"pgid",
              "type":"CephPgid"
          },
          {
              "n":"N",
              "name":"ids",
              "req":"false",
              "type":"CephOsdName"
          }
      ],
      "help":"set pg_temp mapping pgid:[<id> [<id>...]] (developers only)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd266":{
      "sig":[
          "osd",
          "pg-upmap",
          {
              "name":"pgid",
              "type":"CephPgid"
          },
          {
              "n":"N",
              "name":"ids",
              "type":"CephOsdName"
          }
      ],
      "help":"set pg_upmap mapping <pgid>:[<id> [<id>...]] (developers only)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd267":{
      "sig":[
          "osd",
          "rm-pg-upmap",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"clear pg_upmap mapping for <pgid> (developers only)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd268":{
      "sig":[
          "osd",
          "pg-upmap-items",
          {
              "name":"pgid",
              "type":"CephPgid"
          },
          {
              "n":"N",
              "name":"ids",
              "type":"CephOsdName"
          }
      ],
      "help":"set pg_upmap_items mapping <pgid>:{<id> to <id>, [...]} (developers only)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd269":{
      "sig":[
          "osd",
          "rm-pg-upmap-items",
          {
              "name":"pgid",
              "type":"CephPgid"
          }
      ],
      "help":"clear pg_upmap_items mapping for <pgid> (developers only)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd270":{
      "sig":[
          "osd",
          "update-upmap-all",
          {
              "name":"str",
              "type":"CephString"
          }
      ],
      "help":"update pg-upmap-items batch",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd271":{
      "sig":[
          "osd",
          "remove-upmap-items",
          {
              "name":"str",
              "type":"CephString"
          }
      ],
      "help":"rm-pg-upmap-items batch",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd272":{
      "sig":[
          "osd",
          "primary-temp",
          {
              "name":"pgid",
              "type":"CephPgid"
          },
          {
              "name":"id",
              "type":"CephOsdName"
          }
      ],
      "help":"set primary_temp mapping pgid:<id>|-1 (developers only)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd273":{
      "sig":[
          "osd",
          "primary-affinity",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"weight",
              "range":"0.0|1.0",
              "type":"CephFloat"
          }
      ],
      "help":"adjust osd primary-affinity from 0.0 <= <weight> <= 1.0",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd274":{
      "sig":[
          "osd",
          "destroy",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"mark osd as being destroyed. Keeps the ID intact (allowing reuse), but removes cephx keys, config-key data and lockbox keys, rendering data permanently unreadable.",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd275":{
      "sig":[
          "osd",
          "purge",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"purge all osd data from the monitors. Combines `osd destroy`, `osd rm`, and `osd crush rm`.",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd276":{
      "sig":[
          "osd",
          "lost",
          {
              "name":"id",
              "type":"CephOsdName"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"mark osd as permanently lost. THIS DESTROYS DATA IF NO MORE REPLICAS EXIST, BE CAREFUL",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd277":{
      "sig":[
          "osd",
          "create",
          {
              "name":"uuid",
              "req":"false",
              "type":"CephUUID"
          },
          {
              "name":"id",
              "req":"false",
              "type":"CephOsdName"
          }
      ],
      "help":"create new osd (with optional UUID and ID)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd278":{
      "sig":[
          "osd",
          "new",
          {
              "name":"uuid",
              "req":"true",
              "type":"CephUUID"
          },
          {
              "name":"id",
              "req":"false",
              "type":"CephOsdName"
          },
          {
              "name":"diskpoolname",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"Create a new OSD. If supplied, the `id` to be replaced needs to exist and have been previously destroyed. Reads secrets from JSON file via `-i <file>` (see man page).",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd279":{
      "sig":[
          "osd",
          "blacklist",
          {
              "name":"blacklistop",
              "strings":"add|rm",
              "type":"CephChoices"
          },
          {
              "name":"addr",
              "type":"CephEntityAddr"
          },
          {
              "name":"expire",
              "range":"0.0",
              "req":"false",
              "type":"CephFloat"
          }
      ],
      "help":"add (optionally until <expire> seconds from now) or remove <addr> from blacklist",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd280":{
      "sig":[
          "osd",
          "blacklist",
          "ls"
      ],
      "help":"show blacklisted clients",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd281":{
      "sig":[
          "osd",
          "blacklist",
          "clear"
      ],
      "help":"clear all blacklisted clients",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd282":{
      "sig":[
          "osd",
          "pool",
          "mksnap",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"snap",
              "type":"CephString"
          }
      ],
      "help":"make snapshot <snap> in <pool>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd283":{
      "sig":[
          "osd",
          "pool",
          "rmsnap",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"snap",
              "type":"CephString"
          }
      ],
      "help":"remove snapshot <snap> from <pool>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd284":{
      "sig":[
          "osd",
          "pool",
          "ls",
          {
              "name":"detail",
              "req":"false",
              "strings":"detail",
              "type":"CephChoices"
          }
      ],
      "help":"list pools",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd285":{
      "sig":[
          "osd",
          "pool",
          "create",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"pg_num",
              "range":"0",
              "type":"CephInt"
          },
          {
              "name":"pgp_num",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"size",
              "req":"false",
              "strings":"size",
              "type":"CephChoices"
          },
          {
              "name":"val",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"pool_type",
              "req":"false",
              "strings":"replicated|erasure",
              "type":"CephChoices"
          },
          {
              "name":"stripe_unit",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"erasure_code_profile",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"rule",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"expected_num_objects",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"bucket_num",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"bucket_pool_size",
              "req":"false",
              "type":"CephInt"
          },
          {
              "name":"bucket_pool_type",
              "req":"false",
              "strings":"replicated",
              "type":"CephChoices"
          },
          {
              "name":"rule_bucket_name",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"dedup_switch",
              "req":"false",
              "strings":"on|off",
              "type":"CephChoices"
          },
          {
              "name":"compress_switch",
              "req":"false",
              "strings":"on|off",
              "type":"CephChoices"
          },
          {
              "name":"hardware_compress_algorithm",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"software_compress_algorithm",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"need_engine_pool",
              "req":"false",
              "strings":"yes|no",
              "type":"CephChoices"
          },
          {
              "name":"application",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"data_disk_type",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"cache_disk_type",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"create pool",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd286":{
      "sig":[
          "osd",
          "pool",
          "delete",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"pool2",
              "req":"false",
              "type":"CephPoolname"
          },
          {
              "name":"sure",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"delete pool",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd287":{
      "sig":[
          "osd",
          "pool",
          "rm",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"pool2",
              "req":"false",
              "type":"CephPoolname"
          },
          {
              "name":"sure",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"remove pool",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd288":{
      "sig":[
          "osd",
          "pool",
          "rename",
          {
              "name":"srcpool",
              "type":"CephPoolname"
          },
          {
              "name":"destpool",
              "type":"CephPoolname"
          }
      ],
      "help":"rename <srcpool> to <destpool>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd289":{
      "sig":[
          "osd",
          "reset_down_out_interval",
          {
              "name":"interval",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"reset mon_osd_down_out_interval to <interval>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd290":{
      "sig":[
          "osd",
          "pool",
          "get",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"var",
              "strings":"size|min_size|crash_replay_interval|pg_num|pgp_num|crush_rule|hashpspool|nodelete|nopgchange|nosizechange|write_fadvise_dontneed|noscrub|nodeep-scrub|hit_set_type|hit_set_period|hit_set_count|hit_set_fpp|use_gmt_hitset|auid|target_max_objects|target_max_bytes|cache_target_dirty_ratio|cache_target_dirty_high_ratio|promote_full_ratio|promote_some_ratio|cache_target_full_ratio|cache_min_flush_age|cache_min_evict_age|erasure_code_profile|chunk_size|min_read_recency_for_promote|all|min_write_recency_for_promote|write_through_threshold|fast_read|fault_tolerant|less_min_size_to_read|hit_set_grade_decay_rate|hit_set_search_last_n|scrub_min_interval|scrub_max_interval|deep_scrub_interval|recovery_priority|recovery_op_priority|scrub_priority|compression_mode|compression_algorithm|compression_required_ratio|compression_max_blob_size|compression_min_blob_size|csum_type|csum_min_block|csum_max_block",
              "type":"CephChoices"
          }
      ],
      "help":"get pool parameter <var>",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd291":{
      "sig":[
          "osd",
          "pool",
          "set",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"var",
              "strings":"size|min_size|crash_replay_interval|pg_num|pgp_num|crush_rule|hashpspool|nodelete|nopgchange|nosizechange|write_fadvise_dontneed|noscrub|nodeep-scrub|hit_set_type|hit_set_period|hit_set_count|hit_set_fpp|use_gmt_hitset|target_max_bytes|target_max_objects|cache_target_dirty_ratio|cache_target_dirty_high_ratio|cache_target_full_ratio|promote_full_ratio|promote_some_ratio|cache_min_flush_age|cache_min_evict_age|auid|min_read_recency_for_promote|min_write_recency_for_promote|write_through_threshold|fast_read|fault_tolerant|less_min_size_to_read|hit_set_grade_decay_rate|hit_set_search_last_n|scrub_min_interval|scrub_max_interval|deep_scrub_interval|recovery_priority|recovery_op_priority|scrub_priority|compression_mode|compression_algorithm|compression_required_ratio|compression_max_blob_size|compression_min_blob_size|csum_type|csum_min_block|csum_max_block|allow_ec_overwrites|dcache_disk_media",
              "type":"CephChoices"
          },
          {
              "name":"val",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"set pool parameter <var> to <val>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd292":{
      "sig":[
          "osd",
          "pool",
          "set-quota",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"field",
              "strings":"max_objects|max_bytes",
              "type":"CephChoices"
          },
          {
              "name":"val",
              "type":"CephString"
          }
      ],
      "help":"set object or byte limit on pool",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd293":{
      "sig":[
          "osd",
          "pool",
          "get-quota",
          {
              "name":"pool",
              "type":"CephPoolname"
          }
      ],
      "help":"obtain object or byte limits for pool",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd294":{
      "sig":[
          "osd",
          "pool",
          "application",
          "enable",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"app",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"enable use of an application <app> [cephfs,rbd,rgw] on pool <poolname>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd295":{
      "sig":[
          "osd",
          "pool",
          "application",
          "disable",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"disables use of an application <app> on pool <poolname>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd296":{
      "sig":[
          "osd",
          "pool",
          "application",
          "set",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"key",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "name":"value",
              "type":"CephString"
          }
      ],
      "help":"sets application <app> metadata key <key> to <value> on pool <poolname>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd297":{
      "sig":[
          "osd",
          "pool",
          "application",
          "rm",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "type":"CephString"
          },
          {
              "name":"key",
              "type":"CephString"
          }
      ],
      "help":"removes application <app> metadata key <key> on pool <poolname>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd298":{
      "sig":[
          "osd",
          "pool",
          "application",
          "get",
          {
              "name":"pool",
              "req":"fasle",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"key",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"get value of key <key> of application <app> on pool <poolname>",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd299":{
      "sig":[
          "osd",
          "utilization"
      ],
      "help":"get basic pg distribution stats",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd300":{
      "sig":[
          "osd",
          "tier",
          "add",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"tierpool",
              "type":"CephPoolname"
          },
          {
              "name":"force_nonempty",
              "req":"false",
              "strings":"--force-nonempty",
              "type":"CephChoices"
          }
      ],
      "help":"add the tier <tierpool> (the second one) to base pool <pool> (the first one)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd301":{
      "sig":[
          "osd",
          "tier",
          "remove",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"tierpool",
              "type":"CephPoolname"
          }
      ],
      "help":"remove the tier <tierpool> (the second one) from base pool <pool> (the first one)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd302":{
      "sig":[
          "osd",
          "tier",
          "rm",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"tierpool",
              "type":"CephPoolname"
          }
      ],
      "help":"remove the tier <tierpool> (the second one) from base pool <pool> (the first one)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd303":{
      "sig":[
          "osd",
          "tier",
          "cache-mode",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"mode",
              "strings":"none|writeback|forward|readonly|readforward|proxy|readproxy",
              "type":"CephChoices"
          },
          {
              "name":"sure",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"specify the caching mode for cache tier <pool>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd304":{
      "sig":[
          "osd",
          "tier",
          "set-overlay",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"overlaypool",
              "type":"CephPoolname"
          }
      ],
      "help":"set the overlay pool for base pool <pool> to be <overlaypool>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd305":{
      "sig":[
          "osd",
          "tier",
          "remove-overlay",
          {
              "name":"pool",
              "type":"CephPoolname"
          }
      ],
      "help":"remove the overlay pool for base pool <pool>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd306":{
      "sig":[
          "osd",
          "tier",
          "rm-overlay",
          {
              "name":"pool",
              "type":"CephPoolname"
          }
      ],
      "help":"remove the overlay pool for base pool <pool>",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd307":{
      "sig":[
          "osd",
          "tier",
          "add-cache",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"tierpool",
              "type":"CephPoolname"
          },
          {
              "name":"size",
              "range":"0",
              "type":"CephInt"
          }
      ],
      "help":"add a cache <tierpool> (the second one) of size <size> to existing pool <pool> (the first one)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd308":{
      "sig":[
          "osd",
          "pool",
          "add-dcache-pool",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"dcachepool",
              "type":"CephPoolname"
          }
      ],
      "help":"add the pool <dcachepool> (the second one) to base pool <pool> (the first one)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd309":{
      "sig":[
          "osd",
          "pool",
          "remove-dcache-pool",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"dcachepool",
              "type":"CephPoolname"
          }
      ],
      "help":"remove the pool <dcachepool> (the second one) from base pool <pool> (the first one)",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd310":{
      "sig":[
          "osd",
          "get",
          "nodepool_id"
      ],
      "help":"get nodepool id",
      "module":"osd",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd311":{
      "sig":[
          "osd",
          "set",
          "nodepool_id",
          {
              "name":"id",
              "type":"CephInt"
          }
      ],
      "help":"set nodepool prefix id ",
      "module":"osd",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd312":{
      "sig":[
          "config-key",
          "get",
          {
              "name":"key",
              "type":"CephString"
          }
      ],
      "help":"get <key>",
      "module":"config-key",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd313":{
      "sig":[
          "config-key",
          "set",
          {
              "name":"key",
              "type":"CephString"
          },
          {
              "name":"val",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"set <key> to value <val>",
      "module":"config-key",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd314":{
      "sig":[
          "config-key",
          "put",
          {
              "name":"key",
              "type":"CephString"
          },
          {
              "name":"val",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"put <key>, value <val>",
      "module":"config-key",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd315":{
      "sig":[
          "config-key",
          "del",
          {
              "name":"key",
              "type":"CephString"
          }
      ],
      "help":"delete <key>",
      "module":"config-key",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd316":{
      "sig":[
          "config-key",
          "rm",
          {
              "name":"key",
              "type":"CephString"
          }
      ],
      "help":"rm <key>",
      "module":"config-key",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd317":{
      "sig":[
          "config-key",
          "exists",
          {
              "name":"key",
              "type":"CephString"
          }
      ],
      "help":"check for <key>'s existence",
      "module":"config-key",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd318":{
      "sig":[
          "config-key",
          "list"
      ],
      "help":"list keys",
      "module":"config-key",
      "perm":"r",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd319":{
      "sig":[
          "config-key",
          "ls"
      ],
      "help":"list keys",
      "module":"config-key",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd320":{
      "sig":[
          "config-key",
          "dump"
      ],
      "help":"dump keys and values",
      "module":"config-key",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd321":{
      "sig":[
          "config-key",
          "get_by_prefix",
          {
              "name":"key",
              "type":"CephString"
          }
      ],
      "help":"get_by_prefix <key>",
      "module":"config-key",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd322":{
      "sig":[
          "mgr",
          "dump",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"dump the latest MgrMap",
      "module":"mgr",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd323":{
      "sig":[
          "mgr",
          "fail",
          {
              "name":"who",
              "type":"CephString"
          }
      ],
      "help":"treat the named manager daemon as failed",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd324":{
      "sig":[
          "mgr",
          "module",
          "ls"
      ],
      "help":"list active mgr modules",
      "module":"mgr",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd325":{
      "sig":[
          "mgr",
          "services"
      ],
      "help":"list service endpoints provided by mgr modules",
      "module":"mgr",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd326":{
      "sig":[
          "mgr",
          "module",
          "enable",
          {
              "name":"module",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--force",
              "type":"CephChoices"
          }
      ],
      "help":"enable mgr module",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd327":{
      "sig":[
          "mgr",
          "module",
          "disable",
          {
              "name":"module",
              "type":"CephString"
          }
      ],
      "help":"disable mgr module",
      "module":"mgr",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd328":{
      "sig":[
          "mgr",
          "metadata",
          {
              "name":"id",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"dump metadata for all daemons or a specific daemon",
      "module":"mgr",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd329":{
      "sig":[
          "mgr",
          "count-metadata",
          {
              "name":"property",
              "type":"CephString"
          }
      ],
      "help":"count ceph-mgr daemons by metadata field property",
      "module":"mgr",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd330":{
      "sig":[
          "mgr",
          "versions"
      ],
      "help":"check running versions of ceph-mgr daemons",
      "module":"mgr",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd331":{
      "sig":[
          "engine",
          "stat"
      ],
      "help":"print summary of Engine map",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd332":{
      "sig":[
          "engine",
          "dump",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"print summary of Engine map",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd333":{
      "sig":[
          "engine",
          "ls",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"show all Engine ids",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd334":{
      "sig":[
          "engine",
          "getmap",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"get Engine map",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd335":{
      "sig":[
          "engine",
          "getcrushmap",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"get CRUSH map",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd336":{
      "sig":[
          "engine",
          "setcrushmap",
          {
              "name":"prior_version",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"set crush map from input file",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd337":{
      "sig":[
          "engine",
          "getmaxengine",
          {
              "name":"poolname",
              "type":"CephString"
          }
      ],
      "help":"show largest Engine id",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd338":{
      "sig":[
          "engine",
          "find",
          {
              "name":"id",
              "type":"CephEngineid"
          }
      ],
      "help":"find engine <id> in the CRUSH map and show its location",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd339":{
      "sig":[
          "engine",
          "versions"
      ],
      "help":"check running versions of engines",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd340":{
      "sig":[
          "engine",
          "lspools"
      ],
      "help":"list pools",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd341":{
      "sig":[
          "engine",
          "crush",
          "rule",
          "list"
      ],
      "help":"list crush rules",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":4
  },
  "cmd342":{
      "sig":[
          "engine",
          "crush",
          "rule",
          "ls"
      ],
      "help":"list crush rules",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd343":{
      "sig":[
          "engine",
          "crush",
          "rule",
          "dump",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"dump crush rule <name> (default all)",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd344":{
      "sig":[
          "engine",
          "crush",
          "dump"
      ],
      "help":"dump crush map",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd345":{
      "sig":[
          "engine",
          "expanding_pools",
          {
              "n":"N",
              "name":"poolnames",
              "type":"CephString"
          }
      ],
      "help":"will do expansion in <poolnames>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd346":{
      "sig":[
          "engine",
          "new",
          {
              "name":"poolname",
              "type":"CephString"
          },
          {
              "n":"N",
              "name":"hostips",
              "type":"CephString"
          }
      ],
      "help":"creat engine in host(s) <host> [<host> <host>], or use <any|all|*> to creat in all hosts",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd347":{
      "sig":[
          "engine",
          "expansion_done",
          {
              "n":"N",
              "name":"poolnames",
              "type":"CephString"
          }
      ],
      "help":"see whether expansion done or not",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd348":{
      "sig":[
          "engine",
          "bucket_migrate_show"
      ],
      "help":"show engine bucket_migrate_view",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd349":{
      "sig":[
          "engine",
          "clear-zero",
          "bucket_migrate_view"
      ],
      "help":"clear-zero engine bucket_migrate",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd350":{
      "sig":[
          "engine",
          "crush",
          "add-bucket",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "name":"type",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"args",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"add no-parent (probably root) crush bucket <name> of type <type> to location <args>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd351":{
      "sig":[
          "engine",
          "crush",
          "add-engine",
          {
              "name":"name",
              "type":"CephEngineid"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "n":"N",
              "name":"args",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"add engine to location <args>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd352":{
      "sig":[
          "engine",
          "crush",
          "rule",
          "create",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"root",
              "type":"CephString"
          },
          {
              "name":"rule_type",
              "req":"false",
              "strings":"replicated|erasure",
              "type":"CephChoices"
          },
          {
              "name":"failure_domain",
              "req":"false",
              "strings":"host|rack",
              "type":"CephChoices"
          }
      ],
      "help":"create crush rule <name> with <root>, using a choose rule type of <replicated|erasure>, a choose failure domain of <host|rack>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd353":{
      "sig":[
          "engine",
          "pool",
          "application",
          "enable",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"app",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"enable use of an application <app> [cephfs,rbd,rgw] on pool <poolname>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd354":{
      "sig":[
          "engine",
          "pool",
          "application",
          "disable",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "type":"CephString"
          },
          {
              "name":"force",
              "req":"false",
              "strings":"--yes-i-really-mean-it",
              "type":"CephChoices"
          }
      ],
      "help":"disables use of an application <app> on pool <poolname>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd355":{
      "sig":[
          "engine",
          "pool",
          "application",
          "set",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"key",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.=]",
              "name":"value",
              "type":"CephString"
          }
      ],
      "help":"sets application <app> metadata key <key> to <value> on pool <poolname>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd356":{
      "sig":[
          "engine",
          "pool",
          "application",
          "rm",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "type":"CephString"
          },
          {
              "name":"key",
              "type":"CephString"
          }
      ],
      "help":"removes application <app> metadata key <key> on pool <poolname>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd357":{
      "sig":[
          "engine",
          "pool",
          "application",
          "get",
          {
              "name":"pool",
              "req":"fasle",
              "type":"CephPoolname"
          },
          {
              "name":"app",
              "req":"false",
              "type":"CephString"
          },
          {
              "name":"key",
              "req":"false",
              "type":"CephString"
          }
      ],
      "help":"get value of key <key> of application <app> on pool <poolname>",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd358":{
      "sig":[
          "engine",
          "down",
          {
              "n":"N",
              "name":"hostips",
              "type":"CephIPAddr"
          }
      ],
      "help":"set engines down in hosts",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd359":{
      "sig":[
          "engine",
          "delete_done",
          {
              "n":"N",
              "name":"hostips",
              "type":"CephIPAddr"
          }
      ],
      "help":"query whether engines flush done or not in hosts",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd360":{
      "sig":[
          "engine",
          "crush",
          "rule",
          "rm",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"name",
              "type":"CephString"
          }
      ],
      "help":"remove crush rule <name>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd361":{
      "sig":[
          "engine",
          "crush",
          "rule",
          "ls"
      ],
      "help":"list crush rules",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd362":{
      "sig":[
          "engine",
          "crush",
          "rm",
          {
              "name":"names",
              "type":"CephString"
          }
      ],
      "help":"remove <names> (engines,...) from crush map",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd363":{
      "sig":[
          "engine",
          "crush",
          "rm_pool_less",
          {
              "name":"pool",
              "range":"1|32767",
              "type":"CephInt"
          }
      ],
      "help":"remove less than <poolid> (and contains engines in this pools) from crush map",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd364":{
      "sig":[
          "engine",
          "crush",
          "rm_pool_all"
      ],
      "help":"remove all poolid(contains engines) from crush map",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd365":{
      "sig":[
          "engine",
          "crush",
          "rm_pool_id",
          {
              "name":"pool",
              "range":"1|32767",
              "type":"CephInt"
          }
      ],
      "help":"remove this <poolid> (and contains engines in this pools) from crush map",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd366":{
      "sig":[
          "engine",
          "crush",
          "root",
          "ls"
      ],
      "help":"list crush roots",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd367":{
      "sig":[
          "engine",
          "pool",
          "ls",
          {
              "name":"detail",
              "req":"false",
              "strings":"detail",
              "type":"CephChoices"
          }
      ],
      "help":"list poools",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd368":{
      "sig":[
          "engine",
          "pool",
          "mksnap",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"snap",
              "type":"CephString"
          }
      ],
      "help":"make snapshot <snap> in <pool>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd369":{
      "sig":[
          "engine",
          "pool",
          "rmsnap",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"snap",
              "type":"CephString"
          }
      ],
      "help":"remove snapshot <snap> from <pool>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd370":{
      "sig":[
          "engine",
          "force-start-pool-gc",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"ratio",
              "range":"0|100",
              "type":"CephInt"
          },
          {
              "name":"key",
              "strings":"set|unset",
              "type":"CephChoices"
          }
      ],
      "help":"make objects that garbage ratio is no less than <ratio> in <pool>  start to do gc or cacel force",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd371":{
      "sig":[
          "engine",
          "force-start-engine-gc",
          {
              "name":"id",
              "type":"CephEngineid"
          },
          {
              "name":"ratio",
              "range":"0|100",
              "type":"CephInt"
          },
          {
              "name":"key",
              "strings":"set|unset",
              "type":"CephChoices"
          }
      ],
      "help":"make objects that garbage ratio is no less than <ratio> in engine <id> start to do gc or cacel force",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd372":{
      "sig":[
          "engine",
          "force-stop-pool-gc",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"key",
              "strings":"set|unset",
              "type":"CephChoices"
          }
      ],
      "help":"make objects in <pool> stop to do gc or cancel force",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd373":{
      "sig":[
          "engine",
          "get_osd_garbage",
          {
              "name":"pool",
              "type":"CephPoolname"
          },
          {
              "name":"key",
              "strings":"capacity",
              "type":"CephChoices"
          }
      ],
      "help":"make objects in <pool> stop to do gc or cancel force",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd374":{
      "sig":[
          "engine",
          "force-stop-engine-gc",
          {
              "name":"id",
              "type":"CephEngineid"
          },
          {
              "name":"key",
              "strings":"set|unset",
              "type":"CephChoices"
          }
      ],
      "help":"make objects in engine<id> stop to do gc or cancel force",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd375":{
      "sig":[
          "engine",
          "blacklist",
          {
              "name":"blacklistop",
              "strings":"add|rm",
              "type":"CephChoices"
          },
          {
              "name":"addr",
              "type":"CephEntityAddr"
          },
          {
              "name":"expire",
              "range":"0.0",
              "req":"false",
              "type":"CephFloat"
          }
      ],
      "help":"add (optionally until <expire> seconds from now) or remove <addr> from blacklist",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd376":{
      "sig":[
          "engine",
          "blacklist",
          "ls"
      ],
      "help":"show blacklisted clients",
      "module":"engine",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd377":{
      "sig":[
          "engine",
          "blacklist",
          "clear"
      ],
      "help":"clear all blacklisted clients",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd378":{
      "sig":[
          "engine",
          "status",
          {
              "name":"id",
              "type":"CephEngineid"
          }
      ],
      "help":"show engine<id> status",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd379":{
      "sig":[
          "engine",
          "set-prior-site",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"diskpoolname",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"prior_site_name",
              "type":"CephString"
          }
      ],
      "help":"set <prior_site_name> for <diskpoolname>, engines will move to prior_site_name first",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd380":{
      "sig":[
          "engine",
          "rm-prior-site",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"diskpoolname",
              "type":"CephString"
          }
      ],
      "help":"rm prior-site for <diskpoolname>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd381":{
      "sig":[
          "engine",
          "rename-datacenter",
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"srcname",
              "type":"CephString"
          },
          {
              "goodchars":"[A-Za-z0-9-_.]",
              "name":"dstname",
              "type":"CephString"
          }
      ],
      "help":"rename <diskpoolname> datacenter from <srcname> to <dstname>",
      "module":"engine",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd382":{
      "sig":[
          "dse",
          "modify_ip",
          {
              "name":"old_ip",
              "type":"CephIPAddr"
          },
          {
              "name":"new_ip",
              "type":"CephIPAddr"
          }
      ],
      "help":"change host ip",
      "module":"dse",
      "perm":"rw",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd383":{
      "sig":[
          "dse",
          "ls",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"show all dse node ips",
      "module":"dse",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd384":{
      "sig":[
          "dedup",
          "all",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd385":{
      "sig":[
          "dedup",
          "mem",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup mem info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd386":{
      "sig":[
          "dedup",
          "table-capacity",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup table capacity info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd387":{
      "sig":[
          "dedup",
          "saved-capacity",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup saved capacity info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd388":{
      "sig":[
          "dedup",
          "hit-ratio",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup hit ratio info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd389":{
      "sig":[
          "dedup",
          "clear",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup clear status info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd390":{
      "sig":[
          "dedup",
          "expansion",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup expansion status info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd391":{
      "sig":[
          "dedup",
          "deref-count",
          "dump",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          }
      ],
      "help":"get dedup deref count of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd392":{
      "sig":[
          "dedup",
          "set",
          "pool",
          {
              "name":"pool_name",
              "req":"true",
              "type":"CephPoolname"
          },
          {
              "name":"type",
              "req":"true",
              "strings":"online|offline|both",
              "type":"CephChoices"
          },
          {
              "name":"mode",
              "req":"true",
              "strings":"on|off",
              "type":"CephChoices"
          }
      ],
      "help":"set switch status of pool",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd393":{
      "sig":[
          "dedup",
          "dump",
          "pool",
          {
              "name":"pool_name",
              "req":"true",
              "type":"CephPoolname"
          },
          {
              "name":"detail",
              "req":"false",
              "strings":"detail",
              "type":"CephChoices"
          }
      ],
      "help":"get dedup status info of pool ",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd394":{
      "sig":[
          "dedup",
          "status",
          "dump",
          "pool",
          {
              "name":"pool_name",
              "req":"true",
              "type":"CephPoolname"
          }
      ],
      "help":"get dedup status of pool ",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd395":{
      "sig":[
          "dedup",
          "map",
          "dump",
          {
              "name":"epoch",
              "range":"0",
              "req":"false",
              "type":"CephInt"
          }
      ],
      "help":"get dedup map",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd396":{
      "sig":[
          "dedup",
          "check",
          "clear",
          {
              "name":"force",
              "req":"false",
              "strings":"--force",
              "type":"CephChoices"
          },
          {
              "name":"pool",
              "req":"false",
              "type":"CephPoolname"
          }
      ],
      "help":"check clear",
      "module":"dedup",
      "perm":"w",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd397":{
      "sig":[
          "dedup",
          "drop",
          "clear",
          {
              "name":"pool",
              "req":"false",
              "type":"CephPoolname"
          }
      ],
      "help":"drop clear",
      "module":"dedup",
      "perm":"w",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd398":{
      "sig":[
          "compress",
          "dump",
          "engine",
          {
              "name":"id",
              "req":"true",
              "type":"CephEngineid"
          },
          {
              "name":"show_level",
              "req":"false",
              "strings":"show_level",
              "type":"CephChoices"
          }
      ],
      "help":"get compress info of engine",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd399":{
      "sig":[
          "compress",
          "dump",
          "pool",
          {
              "name":"pool_name",
              "req":"true",
              "type":"CephPoolname"
          },
          {
              "name":"detail",
              "req":"false",
              "strings":"detail",
              "type":"CephChoices"
          },
          {
              "name":"show_level",
              "req":"false",
              "strings":"show_level",
              "type":"CephChoices"
          }
      ],
      "help":"get compress info of pool",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd400":{
      "sig":[
          "compress",
          "set_software",
          "pool",
          {
              "name":"pool_name",
              "req":"true",
              "type":"CephPoolname"
          },
          {
              "name":"strategy",
              "req":"true",
              "strings":"lz4|gzip|deflate",
              "type":"CephChoices"
          }
      ],
      "help":"set software compress strategy of pool",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd401":{
      "sig":[
          "compress",
          "set_hardware",
          "pool",
          {
              "name":"pool_name",
              "req":"true",
              "type":"CephPoolname"
          },
          {
              "name":"strategy",
              "req":"true",
              "strings":"gzip",
              "type":"CephChoices"
          }
      ],
      "help":"set hardware compress strategy of pool",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  },
  "cmd402":{
      "sig":[
          "compress",
          "set_switch",
          "pool",
          {
              "name":"pool_name",
              "req":"true",
              "type":"CephPoolname"
          },
          {
              "name":"strategy",
              "req":"true",
              "strings":"on|off",
              "type":"CephChoices"
          }
      ],
      "help":"set compress switch of pool",
      "module":"dedup",
      "perm":"r",
      "avail":"cli,rest",
      "flags":0
  }
}